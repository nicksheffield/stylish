const enums = require('./enums')
const colors = require('./colors')

const unit = (x) => enums.get(x) || (/^[\d\.\-]+$/.test(x) ? +x : x)

/**
 * Not implemented:
 *
 * "alignContent",
 * "alignSelf",
 * "aspectRatio",
 * "backfaceVisibility",
 * "decomposedMatrix",
 * "direction",
 * "display",
 * "fontVariant",
 * "includeFontPadding",
 * "overlayColor",
 * "resizeMode",
 * "rotation",
 * "scaleX",
 * "scaleY",
 * "shadowColor",
 * "shadowOffset",
 * "shadowOpacity",
 * "shadowRadius",
 * "textDecorationColor",
 * "textDecorationLine",
 * "textDecorationStyle",
 * "textShadowColor",
 * "textShadowOffset",
 * "textShadowRadius",
 * "tintColor",
 * "transform",
 * "transformMatrix",
 * "translateX",
 * "translateY",
 * "writingDirection",
 */

module.exports = {
	'fd':         (x) => ({ flexDirection: x }),
	'fw':         (x) => ({ flexWrap: enums.get(x) || x }),
	'jc':         (x) => ({ justifyContent: enums.get(x) || x }),
	'ai':         (x) => ({ alignItems: enums.get(x) || x }),
	'as':         (x) => ({ alignSelf: enums.get(x) || x }),
	'ac':         (x) => ({ alignContent: enums.get(x) || x }),
	'f':          (x) => ({ flex: +x }),
	'f-grow':     (x) => ({ flexGrow: +x }),
	'f-shrink':   (x) => ({ flexShrink: +x }),
	'f-basis':    (x) => ({ flexBasis: unit(x) }),

	'h':          (x) => ({ height: unit(x) }),
	'w':          (x) => ({ width: unit(x) }),
	'max-h':      (x) => ({ maxHeight: unit(x) }),
	'max-w':      (x) => ({ maxWidth: unit(x) }),
	'min-h':      (x) => ({ minHeight: unit(x) }),
	'min-w':      (x) => ({ minWidth: unit(x) }),

	'bg':         (x) => ({ backgroundColor: colors.get(x) || x }),
	'o':          (x) => ({ opacity: +x }),
	'e':          (x) => ({ elevation: +x }),
	'of':         (x) => ({ overflow: x }),

	'txt':        (x) => ({ color: colors.get(x) || x }),
	'ff':         (x) => ({ fontFamily: x.replace(/\-/g, ' ') }),
	'fz':         (x) => ({ fontSize: unit(x) }),
	'fw':         (x) => ({ fontWeight: x }),
	'fs':         (x) => ({ fontStyle: x }),
	'ls':         (x) => ({ letterSpacing: unit(x) }),
	'lh':         (x) => ({ lineHeight: unit(x) }),
	'ta':         (x) => ({ textAlign: x }),
	'tt':         (x) => ({ textTransform: x }),

	'pos':        (x) => ({ position: x }),
	'top':        (x) => ({ top: unit(x) }),
	'right':      (x) => ({ right: unit(x) }),
	'bottom':     (x) => ({ bottom: unit(x) }),
	'left':       (x) => ({ left: unit(x) }),
	'z':          (x) => ({ zIndex: +x }),

	'm':          (x) => ({ margin: unit(x) }),
	'mx':         (x) => ({ marginHorizontal: unit(x) }),
	'my':         (x) => ({ marginVertical: unit(x) }),
	'mt':         (x) => ({ marginTop: unit(x) }),
	'mr':         (x) => ({ marginright: unit(x) }),
	'mb':         (x) => ({ marginBottom: unit(x) }),
	'ml':         (x) => ({ marginLeft: unit(x) }),

	'p':          (x) => ({ padding: unit(x) }),
	'px':         (x) => ({ paddingHorizontal: unit(x) }),
	'py':         (x) => ({ paddingVertical: unit(x) }),
	'pt':         (x) => ({ paddingTop: unit(x) }),
	'pr':         (x) => ({ paddingright: unit(x) }),
	'pb':         (x) => ({ paddingBottom: unit(x) }),
	'pl':         (x) => ({ paddingLeft: unit(x) }),

	'rad':        (x) => ({ borderRadius: +x }),
	'b-c':        (x) => ({ borderColor: colors.get(x) || x }),
	'bt-c':       (x) => ({ borderTopColor: colors.get(x) || x }),
	'br-c':       (x) => ({ borderRightColor: colors.get(x) || x }),
	'bb-c':       (x) => ({ borderBottomColor: colors.get(x) || x }),
	'bl-c':       (x) => ({ borderLeftColor: colors.get(x) || x }),
	'b-w':        (x) => ({ borderWidth: unit(x) }),
	'bt-w':       (x) => ({ borderTopWidth: unit(x) }),
	'br-w':       (x) => ({ borderRightWidth: unit(x) }),
	'bb-w':       (x) => ({ borderBottomWidth: unit(x) }),
	'bl-w':       (x) => ({ borderLeftWidth: unit(x) }),
}